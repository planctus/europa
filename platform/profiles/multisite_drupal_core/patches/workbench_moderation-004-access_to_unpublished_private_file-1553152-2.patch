--- workbench_moderation.module	2013-11-08 09:24:40.026604027 +0100
+++ workbench_moderation.module	2013-11-08 14:10:27.000000000 +0100
@@ -399,6 +399,9 @@
   $permissions['use workbench_moderation needs review tab'] = array(
     'title' => t('Use "Needs review" workbench tab')
   );
+$permissions['Access to unpublished file'] = array(
+   'title' => t('View unpublished file'),
+ );
 
   // Per-node-type, per-transition permissions. Used by workbench_moderation_state_allowed().
   $node_types = workbench_moderation_moderate_node_types();
@@ -856,7 +859,7 @@
   if ($form['options']['#access']) {
     $form['options']['log'] = $form['revision_information']['log'];
     $form['options']['log']['#title'] = t('Moderation notes');
-    $form['options']['workbench_moderation_state_new'] = $form['revision_information']['workbench_moderation_state_new'];
+    $form['options']['workbench_moderation_state_new'] = (isset($form['revision_information']['workbench_moderation_state_new']) ? $form['revision_information']['workbench_moderation_state_new'] : '');
 
     // Unset the old placement of the Revision log.
     unset($form['revision_information']['log']);
@@ -997,8 +1000,11 @@
     return TRUE;
   }
 
+  $return = FALSE;
+  drupal_alter('workbench_moderation_states_allowed', $account, $node_type, $return);
+
   // Default return.
-  return FALSE;
+  return $return;
 }
 
 /**
@@ -2106,3 +2112,60 @@
 function workbench_moderation_migrate_api() {
   return array('api' => 2);
 }
+
+/**
+ * Implements hook_file_download().
+ */
+function workbench_moderation_file_download($uri) {
+
+  // Find the nodes that have this file attached to.
+  $query = db_select('file_usage', 'fu');
+  $query->addField('fu', 'id');
+  $query->addField('fu', 'fid');
+  $query->join('file_managed', 'fm', 'fm.fid = fu.fid');
+  $query->condition('fm.uri', $uri, '=');
+  $query->condition('fu.type', 'node', '=');
+  $result = $query->execute();
+
+  foreach ($result as $record) {
+    // Find file header.
+    $headers = file_get_content_headers(file_load($record->fid));
+
+    // If the user have access to the unpublished private files show all files.
+    if (user_access('Access to unpublished file')) {
+      return $headers;
+    }
+  }
+}

