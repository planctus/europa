<?php

/**
 * Implements hook_field_formatter_info().
 */
function commissioner_date_field_formatter_info() {
  return array(
    'commissioner_date_event_date' => array(
      'label' => t('Event formatter (example: 11 - 14 October 2013)'),
      'field types' => array('datetime'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function commissioner_date_field_formatter_view($obj_type, $object, $field, $instance, $langcode, $items, $display) {
  $element = array();
  // Build variables array for formatter.
  $variables = array(
    '#obj_type' => $obj_type,
    '#object' => $object,
    '#field' => $field,
    '#instance' => $instance,
    '#langcode' => $langcode,
    '#items' => $items,
    '#display' => $display,
  );
  if (function_exists($function = "{$display['module']}_field_formatter_{$display['type']}")) {
    $element[0] = array(
      '#markup' => $function($variables),
    );
  }

  return $element;
}

/**
 * Field Formatter; Date: Event date.
 */
function commissioner_date_field_formatter_commissioner_date_event_date($variables) {

  $element = array();

  foreach ($variables['#items'] as $delta => $item) {

    $date1 = date("Y-m-d", strtotime($item['value']));
    $date2 = date("Y-m-d", strtotime($item['value2']));
    $today = date("Y-m-d");

    $date1_parts = explode('-', $date1);
    $date2_parts = explode('-', $date2);
    if ($date1_parts[1] == $date2_parts[1] && $date1_parts[2] < $date2_parts[2] && $date1_parts[0] == $date2_parts[0]) {
      // Same month
      $common_month_name = format_date(mktime(0, 0, 0, $date1_parts[1],1), 'custom', "M");
      $start_day_name = format_date(mktime(0, 0, 0, $date1_parts[1], $date1_parts[2], $date1_parts[0]), 'custom', "D");
      $end_day_name = format_date(mktime(0, 0, 0, $date2_parts[1], $date2_parts[2], $date2_parts[0]), 'custom', "D");
      $output_date = t('<span class="day_text">@start_day_name-@end_day_name</span> <span class="day">@start_day-@end_day</span> <span class="month">@common_month</span>', array('@start_day' => $date1_parts[2], '@start_day_name' => $start_day_name, '@end_day' => $date2_parts[2], '@end_day_name' => $end_day_name, '@common_month' => $common_month_name, '@common_year' => $date1_parts[0]));
    }
    elseif ($date1_parts[1] == $date2_parts[1] && $date1_parts[2] == $date2_parts[2] && $date1_parts[0] == $date2_parts[0]) {
      // Same date
      $common_month_name = format_date(mktime(0, 0, 0, $date1_parts[1],1), 'custom', "M");
      $common_day_name = format_date(mktime(0, 0, 0, $date1_parts[1], $date1_parts[2], $date1_parts[0]), 'custom', "D");
      $output_date = t('<span class="day_text">@common_day_name</span> <span class="day">@start_day</span> <span class="month">@common_month</span>', array('@start_day' => $date1_parts[2], '@common_day_name' => $common_day_name, '@common_month' => $common_month_name, '@common_year' => $date1_parts[0]));
    }
    else {
      // Different month
      $start_month_name = format_date(mktime(0, 0, 0, $date1_parts[1],1), 'custom', "M");
      $end_month_name = format_date(mktime(0, 0, 0, $date2_parts[1],1), 'custom', "M");
      $start_day_name = format_date(mktime(0, 0, 0, $date1_parts[1], $date1_parts[2], $date1_parts[0]), 'custom', "D");
      $end_day_name = format_date(mktime(0, 0, 0, $date2_parts[1], $date2_parts[2], $date2_parts[0]), 'custom', "D");
      $output_date = t('<span class="day_text">@start_day_name-@end_day_name</span> <span class="day">@start_day-@end_day</span> <span class="month">@start_month @end_month</span>', array('@start_day' => $date1_parts[2], '@start_day_name' => $start_day_name, '@start_month' => $start_month_name,'@start_year' => $date1_parts[0],'@end_day' => $date2_parts[2], '@end_day_name' => $end_day_name, '@end_month' => $end_month_name,'@end_year' => $date2_parts[0]));
    }
    $element[$delta] = array(
      '#markup' => $output_date,
    );
  }

  return $element[0]['#markup'];
}
