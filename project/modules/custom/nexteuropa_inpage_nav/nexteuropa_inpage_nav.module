<?php
/**
 * @file
 * Nexteuropa inline page navigation
 */

define('NEXTEUROPA_INPAGE_NAV_DEPTH', 'h2');

/**
 * Implements hook_block_info().
 */
function nexteuropa_inpage_nav_block_info() {
  $blocks = array();
  $blocks['inline_navigation']['info'] = t('Page Contents');
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function nexteuropa_inpage_nav_block_view($delta = '') {
  $block = array();

  if ($delta === "inline_navigation") {
    $block['content'] = array();
    $items = array();

    $node = menu_get_object('node');
    if(!$node) {
      
      return $block;
    }
    $layout = ds_get_layout('node', $node->type, 'full');
    $scope = 'central';
    if (!empty($layout) && isset($layout['settings']['regions'][$scope])) {
      $region = $layout['settings']['regions'][$scope];
      foreach ($region as $element) {
        // Get anchored headings from body field.
        if ($element == 'body') {
          $node_wrapper = entity_metadata_wrapper('node', $node);
          $body = $node_wrapper->body->value->value();
          $headings = _extract_anchors($body);
          foreach ($headings as $heading) {
            $items[] = '<a href="#' . $heading['id'] . '">' . $heading['label'] . '</a>';
          }
        }

        // If group, check if group label has id attribute to be used as anchor.
        if (preg_match('/group*/', $element)) {
          $group = field_group_load_field_group($element, 'node', $node->type, 'full');
          if ($group_anchor = nexteuropa_inpage_nav_group_anchor($group)) {
            $items[$element] = '<a href="#' . $group_anchor['id'] . '">' . $group_anchor['label'] . '</a>';
          }
        }
      }
    }

    if (!empty($items)) {
      // Include js.
      drupal_add_js(drupal_get_path('module', 'nexteuropa_inpage_nav') . '/assets/js/inpage_nav.js');
      drupal_add_js(array('inpage_navigation' => array('node_title' => $node->title)), 'setting');

      $block['subject'] = t('Page Contents');
      $variables = array(
        'items' => $items,
        'attributes' => array(
          'class' => 'nav nav-stacked',
        ),
      );
      $block['content'] = theme('inpage_nav_block',
        array(
          'vars' => $variables,
          'node_title' => $node->title
        )
      );
    }
  }

  return $block;
}

/**
 * Verifies if a field_group is subject of inpage navigation.
 */
function nexteuropa_inpage_nav_group_anchor($group) {
  $pattern = '/id=[\'\"]{0,1}(\w+)/';
  if (
    $group->format_settings['instance_settings']['show_label'] &&
    $group->format_settings['instance_settings']['label_element'] == NEXTEUROPA_INPAGE_NAV_DEPTH &&
    preg_match($pattern, $group->format_settings['instance_settings']['attributes'], $matches)
  ) {

    return array(
      'id' => $matches[1],
      'label' => isset($group->format_settings['instance_settings']['label']) ? $group->format_settings['instance_settings']['label'] : $group->label,
    );
  }
  return FALSE;
}

/**
 * Helper: returns the list of heading anchors in the markup.
 */
function _extract_anchors($markup) {
  $pattern = "/<" . NEXTEUROPA_INPAGE_NAV_DEPTH . ".*?id=\"(.*)\".*?>(.*)<\/" . NEXTEUROPA_INPAGE_NAV_DEPTH . ">/";
  preg_match_all($pattern, $markup, $matches);
  $anchors = array();
  foreach ($matches[1] as $i => $id) {
    $anchors[] = array(
      'id' => $id,
      'label' => $matches[2][$i],
    );
  }
  return $anchors;
}

/**
 * Implements hook_theme().
 *
 * Used to wrap the items in a specific class BEM way
 */
function nexteuropa_inpage_nav_theme() {
  return array(
    'inpage_nav_block' => array(
      'template' => "templates/" . 'inpage_nav_block',
      'vars' => NULL
    )
  );
}
