<?php
/**
 * @file
 * Code for the dt Topic feature.
 */

include_once 'dt_topic.features.inc';

/**
 * Implements hook_ds_fields_info().
 */
function dt_topic_ds_fields_info($entity_type) {
  $fields = array();

  // This field will combine field_core_top_tasks and field_core_top_tasks_links
  // in one display.
  $fields['dt_topic_top_tasks'] = array(
    'title' => t('Topic Top tasks'),
    'field_type' => DS_FIELD_TYPE_FUNCTION,
    'function' => '_dt_topic_top_tasks',
    'ui_limit' => array('topic|full'),
  );

  return array('node' => $fields);
}

/**
 * Helper function to return top tasks field markup.
 */
function _dt_topic_top_tasks($field) {
  $items = array();

  if (isset($field['entity']) && $node_wrapper = entity_metadata_wrapper('node', $field['entity'])) {
    // If there are taxonomy terms.
    if (isset($node_wrapper->field_core_top_tasks)) {
      foreach ($node_wrapper->field_core_top_tasks->value() as $term) {
        if ($term_wrapper = entity_metadata_wrapper('taxonomy_term', $term)) {
          // If the term has a url.
          $link = FALSE;
          if (isset($term_wrapper->field_core_top_task_link->url)) {
            if (!empty($term_wrapper->field_core_top_task_link->value())) {
              $link = $term_wrapper->field_core_top_task_link->url->value();
            }
            $items[] = dt_topic_get_markup_array($term_wrapper->name->value(), $link);
          }
        }
      }
    }
    // If there are links.
    if (isset($node_wrapper->field_core_top_tasks_links)) {
      foreach ($node_wrapper->field_core_top_tasks_links->value() as $link) {
        $items[] = dt_topic_get_markup_array($link['title'], $link['url']);
      }
    }
  }
  return render($items);
}

/**
 * Helper function to get markup array.
 */
function dt_topic_get_markup_array($title, $link) {

  // Get our classes.
  $classes = _nexteuropa_formatters_field_formatter_view_classes('link_button_block');

  if ($link) {
    return array(
      '#type' => 'link',
      '#title' => $title,
      '#href' => $link ? $link : '',
      '#options' => array(
        'attributes' => array(
          'class' => $classes,
        ),
      ),
    );
  }
  else {
    // If we somehow do not have a link, we return plain markup.
    return array(
      '#markup' => '<div class="' . $classes . '">' . $title . '</div>',
    );
  }
}
