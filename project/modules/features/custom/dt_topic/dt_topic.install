<?php
/**
 * @file
 * DT Topic install file.
 */

/**
 * Implements hook_install().
 */
function dt_topic_install() {
  // Apply default dt configuration to "Topic" content type.
  multisite_config_service('nexteuropa_core')->applyDefaultConfigurationToContentType('topic');
}

/**
 * Implements hook_uninstall().
 */
function dt_topic_uninstall() {
  $path = drupal_get_path('module', 'topic') . '/dt_topic.info';
  $info = drupal_parse_info_file($path);
  drupal_set_message(t('DT Topic %v feature is uninstalled on your site.', array('%v' => $info['version'])));
}

/**
 * Revert and enabling features.
 */
function dt_topic_update_7101() {
  // The features to enable.
  $features = array(
    'dt_topic',
  );
  module_enable($features);

  // Reverting the features.
  foreach ($features as $feature) {
    features_revert_module($feature);
  }
}

/**
 * Reverting the feature to configure the display suite field displays.
 */
function dt_topic_update_7102() {
  features_revert_module('dt_topic');
}

/**
 * Updating Topic content type nodes path aliases.
 */
function dt_topic_update_7103() {
  $nodes = node_load_multiple(array(), array('type' => 'topic'));
  foreach ($nodes as $node) {
    pathauto_node_update_alias($node, 'update ');
  }
}

/**
 * Reverting dt_topic.
 */
function dt_topic_update_7104() {
  // Reverting feature.
  features_revert_module('dt_topic');
}

/**
 * Reverting dt_topic.
 */
function dt_topic_update_7105() {
  // Reverting feature.
  features_revert_module('dt_topic');
}

/**
 * Implements hook_update_N().
 *
 * Reverting dt_topic.
 */
function dt_topic_update_7106() {
  // Reverting feature.
  features_revert_module('dt_topic');

  // One time update function.
  // Get the database schema for the exportable.
  $schema = ctools_export_get_schema('ds_field_settings');
  $export = $schema['export'];

  // Use this schema to get the defaults
  // from the feature's pickled PHP objects.
  $fields_instances = _ctools_export_get_defaults('ds_field_settings', $export);

  // Extract the layout we want. In this case the topic content type.
  $fields_instance = $fields_instances['node|topic|full'];

  // Open our database query.
  $q = db_merge('ds_field_settings');
  $q->key(array('id' => $fields_instance->id));

  // Define our new settings.
  $newsettings = array(
    'ow' => TRUE,
    'ow-el' => 'div',
    'ow-cl' => 'col-md-6',
  );

  // Merge the old with the new settings.
  $addoptions = array_merge(
    $fields_instance->settings['field_topic_tasks']['formatter_settings']['ft'],
    $newsettings
  );

  // Set the new settings to our data array.
  $fields_instance->settings['field_topic_tasks']['formatter_settings']['ft'] = $addoptions;

  // Add the new data to our query.
  $q->fields(array(
    'entity_type' => $fields_instance->entity_type,
    'bundle' => $fields_instance->bundle,
    'view_mode' => $fields_instance->view_mode,
    'settings' => serialize($fields_instance->settings),
  ));

  // Execure the query.
  $q->execute();
}
