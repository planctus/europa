<?php
/**
 * @file
 * Install file.
 */

/**
 * Implements hook_install().
 */
function dt_priority_install() {
  // Apply info dt configuration to "Policy input" content type.
  multisite_config_service('nexteuropa_core')->applyDefaultConfigurationToContentType('priority');
}

/**
 * Implements hook_uninstall().
 */
function dt_priority_uninstall() {
  $path = drupal_get_path('module', 'dt_priority') . '/dt_priority.info';
  $info = drupal_parse_info_file($path);
  drupal_set_message(t('NextEuropa priority %v feature is uninstalled on your site.', array('%v' => $info['version'])));
}

/**
 * Reverting priority content type and removing depricated fields.
 */
function dt_priority_update_7103() {
  // Enable the default.
  module_enable(array('dt_priority_default'));

  // List of features we have to revert. In the correct order.
  $features_to_revert = array(
    'dt_core',
    'dt_banner',
    'dt_featured_item',
    'dt_priority',
    'dt_priority_default',
  );
  // Revert the feature.
  foreach ($features_to_revert as $feature) {
    features_revert_module($feature);
  }

  // List of fields to delete.
  $field_instance_to_remove = array(
    'field_priority_excerpt',
    'field_priority_issue',
    'field_priority_objective',
    'field_core_policy',
    'field_core_announcement',
    'field_core_department',
    'field_core_priorities',
  );

  // Transfer the data of refactored fields.
  _dt_core_field_value_copy('node', 'priority', 'field_priority_objective', 'field_core_objective');
  _dt_core_field_value_copy('node', 'priority', 'field_core_policy', 'field_core_child_policies');
  _dt_core_field_value_copy('node', 'priority', 'field_core_department', 'field_core_departments');

  // Loop and process.
  foreach ($field_instance_to_remove as $field_name) {
    // Delete the instances.
    if ($instance = field_info_instance('node', $field_name, 'priority')) {
      field_delete_instance($instance);
    }
  }

  // Field bases to remove.
  $field_bases_to_remove = array(
    'field_priority_excerpt',
    'field_priority_issue',
    'field_priority_objective',
  );

  // Loop and process.
  foreach ($field_bases_to_remove as $field_name) {
    // Loop the bases and delete them.
    if (field_info_field($field_name) !== NULL) {
      field_delete_field($field_name);
    }
  }

}
