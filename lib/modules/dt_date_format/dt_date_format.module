<?php
/**
 * @file
 * EC date format definition.
 *
 * @see http://thinkshout.com/blog/2014/05/custom-date-formats-in-drupal/
 */

/**
 * Implements hook_field_formatter_info().
 */
function dt_date_format_field_formatter_info() {
  return array(
    'date_event_date' => array(
      'label' => t('Event formatter (example: 11 - 14 October 2013)'),
      'field types' => array('datetime', 'date', 'datestamp'),
    ),
  );
}

/**
 * Implements hook_date_format_types().
 */
function dt_date_format_date_format_types() {
  return [
    'ec_date_j_f_y' => t('EC date format (j F Y)'),
    'ec_date_l_j_f' => t('EC date format (l j F)'),
  ];
}

/**
 * Implements hook_date_formats().
 */
function dt_date_format_date_formats() {
  $formats = [];

  $formats[] = [
    'type' => 'ec_date_j_f_y',
    'format' => 'j F Y',
    'locales' => [],
  ];

  $formats[] = [
    'type' => 'ec_date_l_j_f',
    'format' => 'l j F',
    'locales' => [],
  ];
  foreach ($formats as $format) {
    variable_set('date_format_' . $format['type'], $format['format']);
  }
  return [$formats];
}

/**
 * Implements hook_field_formatter_view().
 */
function dt_date_format_field_formatter_view($obj_type, $object, $field, $instance, $langcode, $items, $display) {
  $element = array();
  // Build variables array for formatter.
  $variables = array(
    '#obj_type' => $obj_type,
    '#object' => $object,
    '#field' => $field,
    '#instance' => $instance,
    '#langcode' => $langcode,
    '#items' => $items,
    '#display' => $display,
  );
  if (function_exists($function = "{$display['module']}_field_formatter_{$display['type']}")) {
    $element[0] = array(
      '#markup' => $function($variables),
    );
  }

  return $element;
}

/**
 * Field Formatter; Date: Event date.
 */
function dt_date_format_field_formatter_date_event_date($variables) {
  $element = array();

  foreach ($variables['#items'] as $delta => $item) {
    // Get the timestamp regardless of the date format.
    $start_date = ($item['date_type'] == 'datestamp') ? $item['value'] : strtotime($item['value']);
    $end_date = ($item['date_type'] == 'datestamp') ? $item['value2'] : strtotime($item['value2']);

    // Get the commonly used strings from the timestamp.
    $start_date_numeric_day = format_date($start_date, 'custom', "d");
    $end_date_numeric_day = format_date($start_date, 'custom', "d");
    $start_date_year = format_date($start_date, 'custom', "Y");
    $end_date_year = format_date($start_date, 'custom', "Y");

    // Initialize the markup string.
    $output_date = '';

    // Conditional formatting.
    if (format_date($start_date, 'custom', "M") == format_date($end_date, 'custom', "M") && $start_date_year == $end_date_year) {
      if ($start_date_numeric_day < $end_date_numeric_day) {
        // Same month.
        $output_date .= '<span class="date-block__day-text">' . format_date($start_date, 'custom', "D") . ' - ' . format_date($end_date, 'custom', "D") . '</span>';
        $output_date .= '<span class="date-block__day">' . $start_date_numeric_day . ' - ' . $end_date_numeric_day . '</span>';
        $output_date .= '<span class="date-block__month">' . format_date($start_date, 'custom', "M") . '</span>';
        return '<div class="date-block">' . $output_date . '</div>';
      }
      elseif ($start_date_numeric_day == $end_date_numeric_day) {
        // Same mont and same day.
        $output_date .= '<span class="date-block__day-text">' . format_date($start_date, 'custom', "D") . '</span>';
        $output_date .= '<span class="date-block__day">' . $start_date_numeric_day . '</span>';
        $output_date .= '<span class="date-block__month">' . format_date($start_date, 'custom', "M") . '</span>';
        return '<div class="date-block">' . $output_date . '</div>';
      }
    }

    // Different month. (aka fallback)
    $output_date .= '<span class="date-block__day-text">' . format_date($start_date, 'custom', "D") . ' - ' . format_date($end_date, 'custom', "D") . '</span>';
    $output_date .= '<span class="date-block__day">' . $start_date_numeric_day . ' - ' . $end_date_numeric_day . '</span>';
    $output_date .= '<span class="date-block__month">' . format_date($start_date, 'custom', "M") . ' - ' . format_date($end_date, 'custom', "M") . '</span>';
    return '<div class="date-block">' . $output_date . '</div>';
  }
}
