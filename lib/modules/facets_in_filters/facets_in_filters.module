<?php
/**
 * @file
 * Contains facets_in_filters hooks.
 */

/**
 * Implements hook_views_api().
 */
function facets_in_filters_views_api() {
  return array(
    'api' => 3,
  );
}

/**
 * Implements hook_views_data().
 */
function facets_in_filters_views_data() {
  $data['facets'] = [
    'table' => [
      'group' => t('Facets'),
      'join' => [
        '#global' => [],
      ],
    ],
  ];
  $data['facets']['facet_filter'] = [
    'group' => t('Facets'),
    'title' => t('Exposed facet'),
    'filter' => [
      'help' => t('Facet in views'),
      'handler' => 'ViewsHandlerFilterFacet',
    ],
  ];

  return $data;
}

/**
 * Implements hook_facetapi_widgets().
 *
 * This will add our custom formatter to the facet api.
 */
function facets_in_filters_facetapi_widgets() {
  return [
    'facets_in_filters_checkbox' => [
      'handler' => [
        'label' => t('Views checkboxes'),
        'class' => 'FacetsInFiltersCheckbox',
        'query types' => ['term', 'date'],
      ],
    ],
    'facets_in_filters_select' => [
      'handler' => [
        'label' => t('Views select'),
        'class' => 'FacetsInFiltersSelect',
        'query types' => ['term', 'date'],
      ],
    ],
  ];
}

/**
 * Implements hook_facetapi_url_processors().
 */
function facets_in_filters_facetapi_url_processors() {
  return [
    'standard' => [
      'handler' => [
        'label' => t('Views URL processors'),
        'class' => 'FacetapiUrlViews',
      ],
    ],
  ];
}

/**
 * Implements hook_facetapi_realm_info().
 */
function facets_in_filters_facetapi_realm_info() {
  return [
    'views' => [
      'label' => t('Views'),
      'sortable' => FALSE,
      'weight' => 10,
      'default widget' => 'facetapi_links',
      'element type' => 'links',
      'description' => t('The <em>views</em> realm displays each facet in a separate views filter.'),
    ],
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function facets_in_filters_form_views_exposed_form_alter(&$form, &$form_state) {
  foreach ($form['#info'] as &$value) {
    if (!isset($form[$value['value']])) {
      $value['label'] = NULL;
    }
  }
}

/**
 * Implements hook_views_ajax_data_alter().
 */
function facets_in_filters_views_ajax_data_alter(&$commands, $view) {
  if ($view->display_handler->get_option('exposed_block')) {
    // Get the active searches.
    $active = facetapi_get_active_searchers();
    $adapter = facetapi_build_realm(reset($active), 'views');
    // Replace each facet.
    foreach ($view->filter as $filter) {
      if ($filter instanceof ViewsHandlerFilterFacet) {
        $element = NULL;
        $field = $filter->options['facet']['facet'];
        $identifier = drupal_clean_css_identifier('filters_in_facets_' . $filter->options['facet']['facet']);
        if (isset($adapter[$field][$field])) {
          if (isset($adapter[$field][$field]['facets'])) {
            $element = $adapter[$field][$field]['facets'];
            $replacement = drupal_render($element);
            $commands[] = ajax_command_replace('#' . $identifier, $replacement);
            $commands[] = ajax_command_invoke('.views-widget-filter-' . $filter->options['id'] . ' label', 'show');
          }
        }
        // If it is not in the list. It means that it's empty. So we remove it
        // from the view.
        else {
          // We must return an empty div as it works as a placeholder.
          $render_array = [
            '#markup' => '<div id="' . $identifier . '"></div>',
          ];
          $commands[] = ajax_command_replace('#' . $identifier, drupal_render($render_array));
          $commands[] = ajax_command_invoke('.views-widget-filter-' . $filter->options['id'] . ' label', 'hide');
        }
      }
    }
  }
}
