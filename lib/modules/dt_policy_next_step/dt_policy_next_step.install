<?php
/**
 * @file
 * The next step field install file for NextEuropa Strategy Policy content type.
 */

/**
 * Implements hook_field_schema().
 */
function dt_policy_next_step_field_schema($field) {
  $columns = array(
    'when_timeframe' => array(
      'type' => 'varchar',
      'length' => $field['settings']['max_length'],
      'not null' => FALSE,
    ),
    'steps_in_bullets' => array(
      'type' => 'text',
      'size' => 'big',
      'description' => "Rich text description",
      'not null' => FALSE,
    ),
    'timezone' => array(
      'type' => 'text',
      'size' => 'big',
      'description' => "Definition of timezone to use for the dates",
      'not null' => FALSE,
    ),
    'time_date_start' => array(
      'type' => 'varchar',
      'length' => 255,
      'description' => "Start date of the item",
      'not null' => FALSE,
    ),
    'time_date_end' => array(
      'type' => 'varchar',
      'length' => 255,
      'description' => "End date of the item",
      'not null' => FALSE,
    ),
  );
  $indexes = array(
    'when_timeframe' => array('when_timeframe'),
  );

  return array(
    'columns' => $columns,
    'indexes' => $indexes,
  );
}

/**
 * Implements hook_enable().
 */
function dt_policy_next_step_enable() {
  drupal_set_message(t('DT Policy Next Step module has been enabled.'));
}

/**
 * Implements hook_disable().
 */
function dt_policy_next_step_disable() {
  drupal_set_message(t('DT Policy Next Step module has been disabled.'));
}

/**
 * Implements hook_uninstall().
 */
function dt_policy_next_step_uninstall() {
  // Remove tables.
  drupal_set_message(t('DT Policy Next Step module has been uninstalled.'));
}

/**
 * DTTSB-236: Adding new fields in the schema.
 */
function dt_policy_next_step_update_7101() {
  // Remove field instance using the timeline component, in order to rebuild it.
  if ($instance = field_info_instance('node', 'field_event_schedule', 'event')) {
    field_delete_instance($instance);
  }
  // Reverting the feature will recreate the field instance with correct schema.
  features_revert_module('dt_event');

  // Get list of existing fields using the type of field.
  $fields_extend = ['field_core_next_steps', 'field_policy_next_steps'];

  foreach ($fields_extend as $field_name) {
    // Add necessary columns in tables to accommodate new input.
    $schema = drupal_get_schema('field_data_' . $field_name);
    db_add_field('field_data_' . $field_name, $field_name . '_timezone', $schema['fields'][$field_name . '_timezone']);
    db_add_field('field_data_' . $field_name, $field_name . '_time_date_start', $schema['fields'][$field_name . '_time_date_start']);
    db_add_field('field_data_' . $field_name, $field_name . '_time_date_end', $schema['fields'][$field_name . '_time_date_end']);

    // Revisions tables.
    $schema = drupal_get_schema('field_revision_' . $field_name);
    db_add_field('field_revision_' . $field_name, $field_name . '_timezone', $schema['fields'][$field_name . '_timezone']);
    db_add_field('field_revision_' . $field_name, $field_name . '_time_date_start', $schema['fields'][$field_name . '_time_date_start']);
    db_add_field('field_revision_' . $field_name, $field_name . '_time_date_end', $schema['fields'][$field_name . '_time_date_end']);
  }

}
