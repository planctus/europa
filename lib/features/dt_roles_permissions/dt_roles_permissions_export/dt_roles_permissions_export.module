<?php
/**
 * @file
 * Dt_roles_permissions export functionality.
 */

/**
 * Implements hook_menu().
 */
function dt_roles_permissions_export_menu() {
  $items = array();

  $items['admin/people/permissions/dt_roles_permissions_export'] = array(
    'access arguments' => array('administer site configuration'),
    'description' => 'Export permissions',
    'file' => 'dt_roles_permissions_export.admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('dt_roles_permissions_export_page'),
    'title' => 'Permission export',
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Helper function to get a list to export and write it to a file.
 *
 * @param mixed $role
 *   The role to get the diff for. Object for specific, All for all.
 *
 * @return bool
 *   True/false on success/failure.
 */
function _dt_roles_permissions_export_export($role) {
  // Just to make sure the directory exists.
  if (_dt_roles_permissions_export_setup_dir()) {
    // If $role is an object it is just one.
    if (is_object($role)) {
      // Get the data.
      $filedata = _dt_roles_permissions_get_export_data($role);
      // Write it to the file.
      file_unmanaged_save_data(
        $filedata,
        _dt_roles_permissions_get_file_dir($role->name),
        FILE_EXISTS_REPLACE
      );
      return TRUE;
    }
    // If the $role is "all" we loop over each role and write them out.
    elseif ($role == 'all') {
      foreach (user_roles() as $key => $role) {
        // Load the role object.
        $role_object = user_role_load($key);
        // Get the data.
        $filedata = _dt_roles_permissions_get_export_data($role_object);
        // Write to the file.
        file_unmanaged_save_data(
          $filedata,
          _dt_roles_permissions_get_file_dir($role_object->name),
          FILE_EXISTS_REPLACE
        );
      }
      return TRUE;
    }
  }
  return FALSE;
}

/**
 * Helper function to get exportable data.
 *
 * @param object $role
 *   The role object.
 *
 * @return string
 *   The php file as string containing the permissions.
 */
function _dt_roles_permissions_get_export_data($role) {
  // Build our export data.
  $export_data = "<?php\n";
  $export_data .= "/**\n";
  $export_data .= " * @file\n";
  $export_data .= " * Contains permissions export for role " . $role->name . ".\n";
  $export_data .= " */\n";
  $export_data .= "\n";
  // Iterate for each selected role.
  $export_data .= "\$permissions['" . $role->name . "'] = array(\n";
  $perms = user_role_permissions(array($role->rid => $role->name));
  if ($role->name == 'editor') {
    echo print_r($perms);
  }
  // Loop the items.
  foreach ($perms[$role->rid] as $perm => $val) {
    $export_data .= "  '" . $perm . "',\n";
  }
  $export_data .= ");\n";
  // Return the export data.
  return $export_data;
}

/**
 * Helper function to detect if the folder exists.
 *
 * @return bool
 *   True/false if the export dir is writable.
 */
function _dt_roles_permissions_export_setup_dir() {
  // Setup the directory to store the exports.
  $filedir = _dt_roles_permissions_get_export_dir();
  // Create it if it does not yet exist.
  if (!file_exists($filedir)) {
    if (drupal_mkdir($filedir, 0755, TRUE)) {
      return TRUE;
    }
    else {
      return FALSE;
    }
  }
  return TRUE;
}
