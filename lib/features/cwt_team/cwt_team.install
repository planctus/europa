<?php

/**
 * @file
 * Cwt_team.install file.
 */

/**
 * Implements hook_enable().
 */
function cwt_team_enable() {
  drupal_set_message(t('CWT Team feature is now active on your site.'));
}

/**
 * Implements hook_disable().
 */
function cwt_team_disable() {
  drupal_set_message(t('CWT Team feature is now inactive on your site.'));
}

/**
 * Enabling nodequeue module.
 */
function cwt_team_update_7101() {
  module_enable(array('nodequeue'));
}

/**
 * Enabling features extra module with nodequeue extension.
 */
function cwt_team_update_7102() {
  module_enable(array('fe_nodequeue'));
}

/**
 * Enable the Smartqueue Taxonomy module.
 */
function cwt_team_update_7103() {
  module_enable(array('smartqueue'));
}

/**
 * Removing obsolete Highlights group and field.
 */
function cwt_team_update_7104() {
  // Remove field.
  $field_name = 'field_team_highlight_block';
  if (field_info_field($field_name) !== NULL) {
    field_delete_field($field_name);
  }
  // Remove group.
  $group = field_group_load_field_group('group_team_highlight', 'node', 'team', 'form');
  field_group_group_export_delete($group, FALSE);
}

/**
 * NEXTEUROPA-4967: Disabling cabinet context, and reverting cwt_team.
 */
function cwt_team_update_7105() {
  $context = context_load('cabinet');
  context_delete($context);
}

/**
 * NEXTEUROPA-6736: Updating theme layout cwt_team.
 */
function cwt_team_update_7106() {
  features_revert(array('cwt_team' => array('views')));
}

/**
 * NEXTEUROPA-7122: Hierarchy of the team respects the node queue.
 */
function cwt_team_update_7107() {
  features_revert(array('cwt_team'));
}

/**
 * NEXTEUROPA-7119: Update to revert the views.
 */
function cwt_team_update_7108() {
  features_revert(array('cwt_team'));
}

/**
 * NEXTEUROPA-4977 - Team page restyling.
 *
 * Disabling social_network_links and enabling dt_social_networks_links
 * while keeping the same field in biography ct,
 * Assigning the right view mode to the college team nodes,
 * Set the default value for existing contents for the field_media_enquiries.
 */
function cwt_team_update_7109() {
  // Disable the social_network_links module.
  db_update('system')
    ->condition('name', 'social_network_links')
    ->fields(array('status' => 0))
    ->execute();

  // Alter the field config to detach social_network_links.
  db_update('field_config')
    ->condition('field_name', 'field_social_networks')
    ->fields(array('module' => 'dt_social_network_links'))
    ->execute();

  // Enable the dt_social_network_links feature.
  module_enable(array('dt_social_network_links'));
  // Uninstall social_network_links.
  drupal_uninstall_modules(array('social_network_links'));
  // Clear the system table cache.
  db_delete('cache_bootstrap')
    ->condition('cid', 'system_list')
    ->execute();

  // CWT core is holding the variables that enables the view mode switch.
  features_revert(array('cwt_core' => array('variable')));
  // Revert component of this features.
  features_revert(array(
    'cwt_team' => array(
      'variable',
      'field_base',
      'field_instance',
      'views',
      'picture_mapping',
    ),
  ));
  // Revert cwt_biography.
  features_revert_module('cwt_biography');

  // Team nodes flagged with this term should use a different view mode.
  $college = taxonomy_get_term_by_name('College', 'team_subtypes');
  $college_tid = array_shift($college)->tid;
  // Find the nodes having this term.
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'team')
    ->fieldCondition('field_team_subtype', 'tid', $college_tid, '=');
  $results = $query->execute();

  if (isset($results['node'])) {
    $nids = array_keys($results['node']);
    $nodes = entity_load('node', $nids);

    foreach ($nodes as $node) {
      if (isset($node->ds_switch)) {
        // This is the display suite override.
        $node->ds_switch = 'college';
        // Maybe this is not needed, but since we are dealing with the home page
        // better not to risk to unpublish the contents.
        if ($node->workbench_moderation['current']->state == 'published') {
          $node->workbench_moderation['current']->published = 1;
        }
        node_save($node);
      }
    }
  }

  // Set the default value for existing contents.
  $field_name = 'field_team_media_enquiries';
  // Find the default value.
  $field = field_info_instance('node', $field_name, 'team');
  $def = $field['default_value'][0]['url'];
  // Find all the existing nodes of type team.
  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'team', '=');
  $results = $query->execute();

  if (isset($results['node'])) {
    $nids = array_keys($results['node']);
    $nodes = entity_load('node', $nids);

    foreach ($nodes as $node) {
      // If there's no value (it's actually a redundant check).
      if (empty($node->{$field_name})) {
        // Set the default value.
        $node->{$field_name}[LANGUAGE_NONE][0]['url'] = $def;
        field_attach_update('node', $node);
        entity_get_controller('node')->resetCache(array($node->nid));
      }
    }
  }
}
