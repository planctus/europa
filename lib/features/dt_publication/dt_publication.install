<?php
/**
 * @file
 * Dt Publication install file.
 */

/**
 * Helper function for importing taxonomy terms.
 */
function _dt_publication_import_taxonomy_terms() {
  $terms = array(
    'No Source',
    'EUR-lex',
    'EC Annual reports',
    'Open data portal',
    'Eurofound',
    'EU Bookshop',
    'EU Publications Office',
  );
  foreach ($terms as $term) {
    _dt_core_create_taxonomy_term('publication_origin', $term);
  }
}

/**
 * Implements hook_install().
 */
function dt_publication_install() {
  // Apply default dt configuration to "Publication" content type.
  multisite_config_service('nexteuropa_core')->applyDefaultConfigurationToContentType('publication');
  _dt_publication_import_taxonomy_terms();

  // Import "Publication Types" terms.
  // Force registration of migration classes.
  migrate_static_registration();
  // Make sure that destination vocabularies exists.
  features_revert(array('dt_publication' => array('taxonomy')));
  // Import publication_types vocabulary's terms.
  Migration::getInstance('DTPublicationPublicationTypes')->processImport();
}

/**
 * Implements hook_uninstall().
 */
function dt_publication_uninstall() {
  $path = drupal_get_path('module', 'dt_publication') . '/dt_publication.info';
  $info = drupal_parse_info_file($path);
  drupal_set_message(t('DT Publication %v feature is uninstalled on your site.', array('%v' => $info['version'])));
}

/**
 * Removing group_publication_metadata and group_scheduler field groups.
 */
function dt_publication_update_7101() {
  $metadata_group = field_group_load_field_group('group_publication_metadata', 'node', 'publication', 'form');
  $scheduler_group = field_group_load_field_group('group_scheduler', 'node', 'publication', 'form');
  field_group_group_export_delete($metadata_group, FALSE);
  field_group_group_export_delete($scheduler_group, FALSE);
}

/**
 * Removing the field_core_file field which is simple file field.
 */
function dt_publication_update_7102() {
  if ($instance = field_info_instance('node', 'field_core_file', 'publication')) {
    field_delete_instance($instance);
  }
}

/**
 * Reverting the feature after changes.
 */
function dt_publication_update_7103() {
  features_revert_module('dt_publication');
  // The fields need component-based way.
  features_revert(array(
    'dt_class' => array('field_instance', 'field_base', 'variable'),
  ));
}

/**
 * Removing group_publication_common and group_publication_files field groups.
 */
function dt_publication_update_7104() {
  $group_publication_common = field_group_load_field_group('group_publication_common', 'node', 'publication', 'form');
  $group_publication_files = field_group_load_field_group('group_publication_files', 'node', 'publication', 'form');
  field_group_group_export_delete($group_publication_common, FALSE);
  field_group_group_export_delete($group_publication_files, FALSE);
}

/**
 * Removing field field_publication_summary.
 */
function dt_publication_update_7105() {
  field_delete_field('field_publication_summary');
}

/**
 * Reverting the feature after changes.
 */
function dt_publication_update_7106() {
  features_revert_module('dt_publication');
}

/**
 * Reverting feature.
 */
function dt_publication_update_7107() {
  features_revert_module('dt_department');
  features_revert_module('dt_publication');
  // Importing taxonomy terms to publication_origin.
  _dt_publication_import_taxonomy_terms();
  // Copy content from field_core_department to field_core_department.
  _dt_shared_field_value_copy('node', 'publication', 'field_core_department', 'field_core_departments');
  // Remove field instance.
  if ($instance = field_info_instance('node', 'field_core_department', 'publication')) {
    field_delete_instance($instance);
  }
}

/**
 * NEXTEUROPA-4904: Changing fields.
 */
function dt_publication_update_7108() {
  // Create several field bases.
  features_revert_module('dt_core');
  // Update fields in the publication content type.
  features_revert_module('dt_publication');

  // Migrate content between fields that are renamed.
  _dt_shared_field_value_copy('node', 'publication', 'field_publication_published_on', 'field_core_date_published');
  _dt_shared_field_value_copy('node', 'publication', 'field_publication_contact', 'field_core_contact');

  // Remove deprecated fields, which are already migrated.
  $deprecated_instances = array(
    'field_core_introduction',
    'field_publication_published_on',
    'field_publication_contact',
  );

  foreach ($deprecated_instances as $field_name) {
    if ($instance = field_info_instance('node', $field_name, 'publication')) {
      field_delete_instance($instance);
    }
  }

  // Removing deprecated field group.
  $group_publication_source = field_group_load_field_group('group_publication_source', 'node', 'publication', 'form');
  field_group_group_export_delete($group_publication_source, FALSE);
}

/**
 * NEXTEUROPA-4905: The display settings.
 */
function dt_publication_update_7109() {
  features_revert_module('dt_publication');
}
