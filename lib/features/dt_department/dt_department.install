<?php
/**
 * @file
 * DT Department install file.
 */

/**
 * Helper function to delete all department tasks taxonomy term.
 *
 * @see https://www.drupal.org/project/taxonomy_delete_all_terms
 */
function _dt_department_remove_all_department_tasks() {
  $vocabulary_machine_name = 'department_tasks';
  $vocabulary = taxonomy_vocabulary_machine_name_load($vocabulary_machine_name);
  $efq = new EntityFieldQuery();
  $efq->entityCondition('entity_type', 'taxonomy_term');
  $efq->propertyCondition('vid', $vocabulary->vid, '=');
  $result = $efq->execute();
  if (!isset($result['taxonomy_term'])) {
    drupal_set_message(t('No terms to delete in vocabulary @voc.', array('@voc' => $vocabulary_machine_name)));
  }
  else {
    foreach ($result['taxonomy_term'] as $term) {
      taxonomy_term_delete($term->tid);
    }
  }
}

/**
 * Helper function migrating department tasks.
 */
function _dt_department_migrate_department_tasks() {
  // Import "Department tasks" terms.
  // Force registration of migration classes.
  migrate_static_registration();
  // Make sure that destination vocabularies exists.
  features_revert(array('dt_department' => array('taxonomy')));
  // Import department_tasks vocabulary's terms.
  Migration::getInstance('DTDepartmentTasks')->processImport();
}

/**
 * Implements hook_install().
 */
function dt_department_install() {
  // Apply default configuration to "Department" content type.
  multisite_config_service('nexteuropa_core')->applyDefaultConfigurationToContentType('department');
  // Migrating department tasks.
  _dt_department_migrate_department_tasks();
}

/**
 * Implements hook_uninstall().
 */
function dt_department_uninstall() {
  $path = drupal_get_path('module', 'dt_department') . '/dt_department.info';
  $info = drupal_parse_info_file($path);
  drupal_set_message(t('NextEuropa Subject %v feature is uninstalled on your site.', array('%v' => $info['version'])));
}

/**
 * Removing field_department_contact field as it becomes field_core_contact.
 */
function dt_department_update_7101() {
  field_delete_field("field_department_contact");
}

/**
 * Reverting DT Department feature to take new fields for sure.
 */
function dt_department_update_7102() {
  // Apply default configuration to "Department" content type.
  multisite_config_service('nexteuropa_core')->applyDefaultConfigurationToContentType('department');

  // Reverting feature.
  features_revert_module('dt_department');
  // The fields need component-based way.
  features_revert(array(
    'dt_department' => array('field_instance', 'variable'),
  ));
}

/**
 * Removing field_person_persons field as it was a mistake.
 */
function dt_department_update_7103() {
  field_delete_field("field_person_persons");
}

/**
 * Reverting DT Department feature to take new fields for sure.
 */
function dt_department_update_7104() {
  // Apply default configuration to "Department" content type.
  multisite_config_service('nexteuropa_core')->applyDefaultConfigurationToContentType('department');

  // Reverting feature.
  features_revert_module('dt_department');
  // The fields need component-based way.
  features_revert(array(
    'dt_department' => array('field_instance', 'variable'),
  ));
}

/**
 * Removing obsolete fields and field groups.
 */
function dt_department_update_7105() {
  // Remove the field.
  $fields_to_remove = array(
    'field_department_main_tasks',
  );

  foreach ($fields_to_remove as $field_name) {
    if (field_info_field($field_name) !== NULL) {
      field_delete_field($field_name);
    }
  }

  // Remove the fieldgroups.
  $type = 'department';
  $fieldgroups_to_remove = array(
    'group_cta',
    'group_topics',
  );

  foreach ($fieldgroups_to_remove as $group_name) {
    $group = field_group_load_field_group($group_name, 'node', $type, 'form');
    field_group_group_export_delete($group, FALSE);
  }

  // Reverting feature.
  features_revert_module('dt_department');
}

/**
 * Removing obsolete field group.
 */
function dt_department_update_7106() {
  // Remove the fieldgroups.
  $type = 'department';
  $fieldgroups_to_remove = array(
    'group_cta',
    'group_topics',
  );

  foreach ($fieldgroups_to_remove as $group_name) {
    $group = field_group_load_field_group($group_name, 'node', $type, 'form');
    field_group_group_export_delete($group, FALSE);
  }

  // Reverting feature.
  features_revert_module('dt_department');
}

/**
 * Migrating department tasks, modified Action link to Staff search field.
 */
function dt_department_update_7107() {
  field_delete_field("field_department_action_link");
  field_delete_field("field_department_related_tasks");
  // Reverting feature.
  features_revert_module('dt_department');
}

/**
 * Reverting dt_department.
 */
function dt_department_update_7108() {
  // Reverting feature.
  features_revert_module('dt_department');
}

/**
 * Reverting dt_department.
 */
function dt_department_update_7109() {
  features_revert_module('dt_department');
}

/**
 * NEXTEUROPA-4931: Adding Main Task filter on the list of departments.
 */
function dt_department_update_7110() {
  features_revert_module('dt_department');
}

/**
 * NEXTEUROPA-4817: Move related links to the bottom.
 */
function dt_department_update_7111() {
  // Reverting feature.
  features_revert_module('dt_department');
}

/**
 * NEXTEUROPA-8913: Change values of existing pages.
 */
function dt_department_update_7112() {
  $types_to_merge = array('Directorate-General (policy)', 'Directorate-General (operational)');

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node');
  $query->fieldCondition('field_core_ecorganisation', 'value', $types_to_merge, 'IN');
  $department_ids = $query->execute();

  if (isset($department_ids['node'])) {
    $departments = entity_load('node', array_keys($department_ids['node']));
    // Loop over the entity's and update the information.
    foreach ($departments as $nid => $department) {
      // Depending on the old value we set our new field.
      if (strpos($department->field_core_ecorganisation[LANGUAGE_NONE]['0']['value'], 'policy')) {
        $dg_type = 'policy';
      }
      elseif (strpos($department->field_core_ecorganisation[LANGUAGE_NONE]['0']['value'], 'operational')) {
        $dg_type = 'operational';
      }

      if (isset($dg_type)) {
        // Set the dg type.
        $department->field_department_dg_type[LANGUAGE_NONE]['0']['value'] = $dg_type;
        // Set it to the default.
        $department->field_core_ecorganisation[LANGUAGE_NONE]['0']['value'] = 'Directorate-General';
      }

      // Update and reset cache.
      field_attach_update('node', $department);
      entity_get_controller('node')->resetCache(array($nid));
    }
  }

  features_revert_module('dt_core');
  features_revert_module('dt_department');
}
