<?php

/**
 * @file
 * Code for the DT Contact feature.
 */

include_once 'dt_contact.features.inc';

/**
 * Helper function for defining phone fields.
 *
 * @return array
 *   Array of contact's phone fields.
 */
function _dt_contact_phone_fields() {
  return [
    'field_contact_phone_number' => 'Phone number',
    'field_contact_mobile_number' => 'Mobile number',
  ];
}

/**
 * Implements hook_node_view().
 */
function dt_contact_node_view($node, $view_mode, $langcode) {
  if ($node->type == 'contact') {
    // Check if the address thorouhfare and premise have a value
    // hide these fields if they don't.
    $field = 'field_contact_postal_mail';
    $value = field_get_items('node', $node, $field);
    if (isset($value)) {
      if (!($value[0]['thoroughfare']) && !($value[0]['premise'])) {
        unset($node->$field);
      }
    }
    else {
      unset($node->$field);
    }
  }
}

/**
 * Implements hook_form_node_form_alter().
 *
 * Extra validate callback specific for
 * telephone numbers field.
 */
function dt_contact_form_node_form_alter(&$form, &$form_state, $form_id) {
  // Checking the phone fields on the form if exists.
  $is_phone_field = !empty(array_diff(array_keys($form), array_keys(_dt_contact_phone_fields())));
  if ($is_phone_field) {
    $form['#validate'][] = '_dt_contact_phone_validate';
  }
}

/**
 * Callback handler for phone field validation.
 */
function _dt_contact_phone_validate($form, &$form_state) {
  foreach (_dt_contact_phone_fields() as $key => $item) {
    $lang = $form[$key]['#language'];
    if ($form_state['values'][$key][$lang][0]['value']) {
      $contact_phone = trim($form_state['values'][$key][$lang][0]['value']);
      // Validate the current phone number.
      foreach (_dt_shared_functions_contactphone_patterns($item) as $pattern_values) {
        preg_match($pattern_values['pattern'], $contact_phone, $matches);
        if (!isset($matches[$pattern_values['return_key']]) && isset($pattern_values['required'])) {
          form_set_error($key, $pattern_values['explain']);
        }
      }
    }
  }
}
