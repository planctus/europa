<?php

/**
 * @file
 * Tests for ecas_extra.module.
 */

define('ACTIVE', 1);
define('DENIED', 1);
define('INACTIVE', 0);
define('ALLOWED', 0);

/**
 * Test the administration pages.
 */
class EcasExtraAdminSettingsTest extends DrupalWebTestCase {

  protected $web_user;
  protected $admin_user;

  public static function getInfo() {
    return array(
      'name' => 'Extra admin settings',
      'description' => 'Test the admin pages of ECAS extra module.',
      'group' => 'ECAS',
    );
  }

  function setUp() {
    parent::setUp(array(
      'ecas_extra'
    ));

    $this->web_user = $this->drupalCreateUser(array(
      'create article content',
      'create page content'
        ));

    $this->admin_user = $this->drupalCreateUser(array(
      'bypass node access',
      'administer nodes',
      'administer ecas',
      'administer users',
    ));

  }

  /**
   * Try to access the pages with the web user and admin user
   */
  function testMenuAccess() {
    $this->drupalLogin($this->web_user);
    $this->drupalGet('admin/config/ecas/extra');
    $this->assertNoResponse(200, 'User without "administer ecas" permission does not have access to the ECAS Extra administration pages');

    $this->drupalGet('admin/people/blocked_accounts');
    $this->assertNoResponse(200, 'User without "administer ecas" permission does not have access to the Blocked Accounts pages');

    $this->drupalGet('<front>');
    $this->drupalLogin($this->admin_user);
    $this->drupalGet('admin/config/ecas/ecas_extra');
    $this->assertResponse(200, 'User with "administer ecas" permission has access to the ECAS Extra administration pages');
    $this->drupalGet('admin/people/blocked_accounts');
    $this->assertResponse(200, 'User with "administer ecas" permission has access to the Blocked Accounts pages');
  }

  /**
   * Verify settings are saved correctly
   */
  function testSavingSettings() {
    $this->drupalLogin($this->admin_user);
    $this->drupalGet('admin/config/ecas/extra');

    $edit = array(
        'ecas_extra_deny_action_subject' => 'test-subject',
        'ecas_extra_deny_action_mail' => 'test-mail',
        );
    $this->drupalPost(NULL, $edit, 'Save configuration');

    // Check the values are stored correctly
    $this->assertFieldById('edit-ecas-extra-deny-action-subject', 'test-subject');
    $this->assertFieldById('edit-ecas-extra-deny-action-mail', 'test-mail');
  }
}

/**
 * Test the functionality pages.
 */
class EcasExtraFunctionalTest extends DrupalWebTestCase {

  protected $web_user_active_allowed;
  protected $web_user_active_denied;
  protected $web_user_inactive_allowed;
  protected $web_user_inactive_denied;
  protected $ecas_user_active_allowed;
  protected $ecas_user_active_denied;
  protected $ecas_user_inactive_allowed;
  protected $ecas_user_inactive_denied;
  protected $admin_user;

  public static function getInfo() {
    return array(
        'name' => 'Extra functionality',
        'description' => 'Test the functionality of ECAS Extra module.',
         'group' => 'ECAS',
        );
  }

  protected function createUser($rid, $name, $status, $denied, $ecas = FALSE) {
    $edit = array();
    $edit['name']   = $name;
    $edit['mail']   = $edit['name'] . '@example.com';
    $edit['pass']   = user_password();
    $edit['status'] = $status;
    if ($rid) {
      $edit['roles'] = array($rid => $rid);
    }

    $account = user_save(drupal_anonymous_user(), $edit);

    $this->assertTrue(!empty($account->uid), t('User created with name %name and pass %pass', array('%name' => $edit['name'], '%pass' => $edit['pass'])), t('User login'));
    if (empty($account->uid)) {
      return FALSE;
    }

    // Add the raw password so that we can log in as this user.
    $account->pass_raw = $edit['pass'];
    if ($denied == DENIED) {
      deny_account_action($account, NULL);
     }

    if ($ecas) {
      $cas_authmap = db_insert('authmap')
       ->fields(array(
           'authname' => $name,
           'uid' => $account->uid,
           'module' => 'ecas',
           ))
       ->execute();
     }
     return $account;
  }


  function setUp() {
    parent::setUp(array(
        'ecas_extra'
        ));

    // create some standard permissions
    $rid = $this->drupalCreateRole(array(
        'create article content',
        'create page content'
        ));

    // Create some users
    $this->web_user_active_allowed = $this->createUser($rid, 'web_user_active_allowed', ACTIVE, ALLOWED);
    $this->web_user_active_denied = $this->createUser($rid, 'web_user_active_denied', ACTIVE, DENIED);
    $this->web_user_inactive_allowed = $this->createUser($rid, 'web_user_inactive_allowed', INACTIVE, ALLOWED);
    $this->web_user_inactive_denied = $this->createUser($rid, 'web_user_inactive_denied', INACTIVE, DENIED);
    $this->ecas_user_active_allowed = $this->createUser($rid, 'ecas_user_active_allowed', ACTIVE, ALLOWED, TRUE);
    $this->ecas_user_active_denied = $this->createUser($rid, 'ecas_user_active_denied', ACTIVE, DENIED, TRUE);
    $this->ecas_user_inactive_allowed = $this->createUser($rid, 'ecas_user_inactive_allowed', INACTIVE, ALLOWED, TRUE);
    $this->ecas_user_inactive_denied = $this->createUser($rid, 'ecas_user_inactive_denied', INACTIVE, DENIED, TRUE);

    $this->admin_user = $this->drupalCreateUser(array(
      'administer site configuration',
      'bypass node access',
      'administer nodes',
      'administer ecas',
      'administer users',
    ));
  }

  /**
   * Test the exposed filter by the blocked_accounts view (page)
   */
  function testBlockedPeopleViewFilter() {
    $this->drupalLogin($this->admin_user);

    // List all
    $this->drupalGet('admin/people/blocked_accounts', array('query' => array(
          'uid' => '',
          'mail' => '',
          'user_denied' => 'All',
          'status' => 'All'
    )));

    $this->assertText('web_user_active_allowed', 'User web_user_active_allowed was listed');
    $this->assertText('web_user_active_denied',  'User web_user_active_denied was listed');
    $this->assertText('web_user_inactive_allowed', 'User web_user_inactive_allowed was listed');
    $this->assertText('web_user_inactive_denied',  'User web_user_inactive_denied was listed');
    $this->assertText('ecas_user_active_allowed', 'User ecas_user_active_allowed was listed');
    $this->assertText('ecas_user_active_denied',  'User ecas_user_active_denied was listed');
    $this->assertText('ecas_user_inactive_allowed', 'User ecas_user_inactive_allowed was listed');
    $this->assertText('ecas_user_inactive_denied',  'User ecas_user_inactive_denied was listed');

    // List inactive
    $this->drupalGet('admin/people/blocked_accounts', array('query' => array(
      'uid' => '',
      'mail' => '',
      'user_denied' => 'All',
      'status' => '0'
    )));

    $this->assertText('web_user_inactive_allowed', 'User web_user_inactive_allowed was listed');
    $this->assertText('web_user_inactive_denied',  'User web_user_inactive_denied was listed');
    $this->assertText('ecas_user_inactive_allowed', 'User ecas_user_inactive_allowed was listed');
    $this->assertText('ecas_user_inactive_denied',  'User ecas_user_inactive_denied was listed');

    $this->assertNoText('web_user_active_allowed', 'User web_user_active_allowed was not listed');
    $this->assertNoText('web_user_active_denied',  'User web_user_active_denied was not listed');
    $this->assertNoText('ecas_user_active_allowed', 'User ecas_user_active_allowed was not listed');
    $this->assertNoText('ecas_user_active_denied',  'User ecas_user_active_denied was not listed');

    // List inactive, denied
    $this->drupalGet('admin/people/blocked_accounts', array('query' => array(
      'uid' => '',
      'mail' => '',
      'user_denied' => '0',
      'status' => '0'
    )));

    $this->assertText('web_user_inactive_denied',  'User web_user_inactive_denied was listed');
    $this->assertText('ecas_user_inactive_denied',  'User ecas_user_inactive_denied was listed');

    $this->assertNoText('web_user_inactive_allowed', 'User web_user_inactive_allowed was not listed');
    $this->assertNoText('web_user_active_allowed', 'User web_user_active_allowed was not listed');
    $this->assertNoText('web_user_active_denied',  'User web_user_active_denied was not listed');
    $this->assertNoText('ecas_user_inactive_allowed', 'User ecas_user_inactive_allowed was not listed');
    $this->assertNoText('ecas_user_active_allowed', 'User ecas_user_active_allowed was not listed');
    $this->assertNoText('ecas_user_active_denied',  'User ecas_user_active_denied was not listed');

    $this->drupalGet('admin/people/blocked_accounts', array('query' => array(
      'uid' => 'ecas_user_inactive_allowed',
      'mail' => '',
      'user_denied' => 'All',
      'status' => 'All'
    )));

  	$this->assertText('ecas_user_inactive_allowed', 'User ecas_user_inactive_allowed was listed');

  	$this->assertNoText('web_user_inactive_denied',  'User web_user_inactive_denied was not listed');
  	$this->assertNoText('web_user_inactive_allowed', 'User web_user_inactive_allowed was not listed');
  	$this->assertNoText('web_user_active_allowed', 'User web_user_active_allowed was not listed');
  	$this->assertNoText('web_user_active_denied',  'User web_user_active_denied was not listed');
  	$this->assertNoText('ecas_user_inactive_denied',  'User ecas_user_inactive_denied was not listed');
  	$this->assertNoText('ecas_user_active_allowed', 'User ecas_user_active_allowed was not listed');
  	$this->assertNoText('ecas_user_active_denied',  'User ecas_user_active_denied was not listed');

  	// Filter on email
  	$this->drupalGet('admin/people/blocked_accounts', array('query' => array(
  	      'uid' => '',
  	      'mail' => $this->ecas_user_inactive_denied->mail,
  	      'user_denied' => '0',
  	      'status' => '0'
  	)));

  	$this->assertText('ecas_user_inactive_denied',  'User ecas_user_inactive_denied was listed');

  	$this->assertNoText('web_user_inactive_denied',  'User web_user_inactive_denied was not listed');
  	$this->assertNoText('web_user_inactive_allowed', 'User web_user_inactive_allowed was not listed');
  	$this->assertNoText('web_user_active_allowed', 'User web_user_active_allowed was not listed');
  	$this->assertNoText('web_user_active_denied',  'User web_user_active_denied was not listed');
  	$this->assertNoText('ecas_user_inactive_allowed', 'User ecas_user_inactive_allowed was not listed');
  	$this->assertNoText('ecas_user_active_allowed', 'User ecas_user_active_allowed was not listed');
  	$this->assertNoText('ecas_user_active_denied',  'User ecas_user_active_denied was not listed');

  }

  /**
   * Test the bulk operation action for blocking a user
   */
  function testBlockedPeopleBulkOperation() {
    $this->drupalLogin($this->admin_user);

    $this->drupalGet('admin/people/blocked_accounts', array('query' => array(
      	      'uid' => '',
      	      'mail' => '',
      	      'user_denied' => '1',
      	      'status' => 'All'
    )));

    $this->assertText('web_user_active_allowed', 'User web_user_active_allowed was listed');
    $this->assertText('web_user_inactive_allowed', 'User web_user_inactive_allowed was listed');
    $this->assertText('ecas_user_active_allowed', 'User ecas_user_active_allowed was listed');
    $this->assertText('ecas_user_inactive_allowed', 'User ecas_user_inactive_allowed listed');

    $this->assertNoText('web_user_active_denied',  'User web_user_active_denied was not listed');
    $this->assertNoText('web_user_inactive_denied',  'User web_user_inactive_denied was not listed');
    $this->assertNoText('ecas_user_active_denied',  'User ecas_user_active_denied was not listed');
    $this->assertNoText('ecas_user_inactive_denied',  'User ecas_user_inactive_denied was not listed');

    // Block all web users
    $edit = array(
      'operation' => 'action::deny_account_action',
      'views_bulk_operations[2]' => '2',
      'views_bulk_operations[3]' => '4',
    );
    $this->drupalPost(NULL, $edit, 'Execute', array(), array(), 'views-form-blocked-accounts-page-1');

    $this->assertText(t('You selected the following'), 'Confirm page for deny action');
    $this->assertText('web_user_active_allowed', 'User ecas_user_active_allowed listed');
    $this->assertText('web_user_inactive_allowed', 'User ecas_user_inactive_allowed listed');

    $edit = array();
    $this->drupalPost(NULL, $edit, 'Confirm');

    $this->assertText(t('Performed Deny the activation of a user account. on 2 items.'), 'Performed Deny the activation of a user account. on 2 items.');

    $this->assertText('ecas_user_active_allowed', 'User ecas_user_active_allowed was listed');
    $this->assertText('ecas_user_inactive_allowed', 'User ecas_user_inactive_allowed was listed');

    $this->assertNoText('web_user_active_allowed', 'User web_user_active_allowed was not listed');
    $this->assertNoText('web_user_inactive_allowed', 'User web_user_inactive_allowed was not listed');

    $this->assertNoText('web_user_active_denied',  'User web_user_active_denied was not listed');
    $this->assertNoText('web_user_inactive_denied',  'User web_user_inactive_denied was not listed');
    $this->assertNoText('ecas_user_active_denied',  'User ecas_user_active_denied was not listed');
    $this->assertNoText('ecas_user_inactive_denied',  'User ecas_user_inactive_denied was not listed');
  }

}
