--- chr.module	2014-10-17 14:29:42.338714671 +0200
+++ chr.module	2014-10-17 14:33:54.994184777 +0200
@@ -221,14 +221,22 @@
   // Parse response headers from the response body.
   // Be tolerant of malformed HTTP responses that separate header and body with
   // \n\n or \r\r instead of \r\n\r\n.
-  list($response, $result->data) = preg_split("/\r\n\r\n|\n\n|\r\r/", $result->data, 2);
+  //list($response, $result->data) = preg_split("/\r\n\r\n|\n\n|\r\r/", $result->data, 2);
+  // fix MULTISITE-1944
+  $param = preg_split("/\r\n\r\n|\n\n|\r\r/", $result->data, 2);
+  $response = $param[0];
+  $result->data = (isset($param[1])) ? $param[1] : "";

   // Sometimes when making an HTTP request via proxy using cURL, you end up with a multiple set of headers:
   // from the web server being the actual target, from the proxy itself, etc.
   // The following 'if' statement is to check for such a situation and make sure we get a proper split between
   // actual response body and actual response headers both coming from the web server.
   while ('HTTP/' == substr($result->data, 0, 5)) {
-    list($response, $result->data) = preg_split("/\r\n\r\n|\n\n|\r\r/", $result->data, 2);
+    //list($response, $result->data) = preg_split("/\r\n\r\n|\n\n|\r\r/", $result->data, 2);
+    // fix MULTISITE-1944
+    $param = preg_split("/\r\n\r\n|\n\n|\r\r/", $result->data, 2);
+    $response = $param[0];
+    $result->data = (isset($param[1])) ? $param[1] : "";
   }

   $response = preg_split("/\r\n|\n|\r/", $response);
@@ -448,6 +456,13 @@
       curl_setopt($ch, CURLOPT_HTTPGET, TRUE);
       $valid_method = TRUE;
     break;
+    // FPFIS fix jira REST remoting
+    // https://answers.atlassian.com/questions/72475/jira-update-custom-fields-using-rest-php-and-curl
+    case 'PUT_JIRA':
+      curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");
+      curl_setopt($ch, CURLOPT_POSTFIELDS, $options['data']);
+      $valid_method = TRUE;
+    break;
     case 'HEAD':
       curl_setopt($ch, CURLOPT_NOBODY, TRUE);
       $valid_method = TRUE;
