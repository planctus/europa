--- workbench_moderation.module	Fri Feb 13 11:00:39 2015
+++ workbench_moderation.module	Fri Feb 13 10:56:19 2015
@@ -823,12 +823,13 @@
   if (!workbench_moderation_node_type_moderated($form['type']['#value'])) {
     return;
   }
+
   // Set a moderation state even if there is not one defined
   if (isset($form['#node']->workbench_moderation['current']->state)) {
     $moderation_state = $form['#node']->workbench_moderation['current']->state;
   }
   else {
-    $moderation_state = variable_get('workbench_moderation_default_state_' . $form['type']['#value'], workbench_moderation_state_none());
+    $moderation_state = workbench_moderation_state_none();
   }
 
   // Store the current moderation state
@@ -836,24 +837,40 @@
     '#type' => 'value',
     '#value' => $moderation_state
   );
-  // We have a use case where a live node is being edited. This will always
+  // We have a use case where a published node is being edited. This will always
   // revert back to the original node status.
   if ($moderation_state == workbench_moderation_state_published()) {
     $moderation_state = workbench_moderation_state_none();
   }
-  // Get all the states *this* user can access. If states is false, this user
-  // can not change the moderation state
+  // Get all the states *this* user can access. If there aren't any, this user
+  // can not change the moderation state.
   if ($states = workbench_moderation_states_next($moderation_state, $user, $form['#node'])) {
-    $current = array($moderation_state => t('Current: @state', array('@state' => workbench_moderation_state_label($moderation_state))));
-    $states = array_merge($current, $states);
+    $states[$moderation_state] = t('@state (Current)', array('@state' => workbench_moderation_state_label($moderation_state)));
+    $states_sorted = array();
+    foreach (array_keys(workbench_moderation_states()) as $state) {
+      if (array_key_exists($state, $states)) {
+        $states_sorted[$state] = $states[$state];
+      }
+    }
+    $states = $states_sorted;
+
     $form['revision_information']['workbench_moderation_state_new'] = array(
       '#title' => t('Moderation state'),
       '#type' => 'select',
       '#options' => $states,
-      '#default_value' => $moderation_state,
       '#description' => t('Set the moderation state for this content.'),
       '#access' => $states ? TRUE: FALSE,
     );
+
+    // If the user has access to the pre-set default state, make it the default
+    // here.  Otherwise, don't set a default in this case.
+    $default_state = variable_get('workbench_moderation_default_state_' . $form['type']['#value']);
+    if ($default_state && array_key_exists($default_state, $states)) {
+      $form['revision_information']['workbench_moderation_state_new']['#default_value'] = $default_state;
+    }
+    else {
+      $form['revision_information']['workbench_moderation_state_new']['#default_value'] = workbench_moderation_state_none();
+    }
   }
   else {
     // Store the current moderation state
