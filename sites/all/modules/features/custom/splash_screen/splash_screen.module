<?php

/**
 * @file
 * Code for the Splash_screen feature.
 */

/**
 * Implements hook_menu().
 */
function splash_screen_menu() {
  $items['admin/config/splash_screen'] = array(
    'title' => 'Splash screen settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('form_splash_screen_settings'),
    'access arguments' => array('administer splash screen'),
  );
  $items['admin/config/splash_screen/settings'] = array(
    'title' => 'Splash screen settings',
    'description' => 'Configure the splash screen module',
    'file' => 'includes/splash_screen.admin.inc',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('_splash_screen_settings_form'),
    'access arguments' => array('administer splash screen'),
  );
  $items['splash'] = array(
    'title' => 'Splash screen',
    'page callback' => 'theme',
    'page arguments' => array('splash'),
    'access callback' => array('splash_screen_check_access'),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Custom callback function to check access.
 */
function splash_screen_check_access() {
  global $language;

  $is_anonymous = user_is_anonymous();
  if ($is_anonymous && $language->provider == 'language-default') {
    // Display splash screen.
    return TRUE;
  }
  else {
    // Redirect user to real home page, in correct language
    // Extra test has to be made to check current page because... Drupal.
    $home = variable_get('splash_screen_home_page', '');
    if (drupal_is_front_page() && !empty($home)) {
      drupal_goto($home);
    }
    return FALSE;
  }
}

/**
 * Implements hook_theme().
 */
function splash_screen_theme($existing, $type, $theme, $path) {
  return array(
    'splash' => array(
      'template' => 'splash',
      'path' => $path . '/theme',
    ),
  );
}

/**
 * Implements hook_preprocess().
 */
function splash_screen_preprocess_splash(&$variables) {
  global $language;
  global $base_url;

  $languages_blacklist = variable_get('splash_screen_blacklist', array());
  $languages = language_list('enabled');
  $languages_list = '<ol>';

  // Add enabled languages, if not in blacklist.
  foreach ($languages[1] as $lang) {
    if (!in_array($lang->prefix, $languages_blacklist)) {
      $languages_list .= '<li>';
      $languages_list .= '<a lang="' . $lang->prefix . '" hreflang="' . $lang->prefix . '" href="' . $base_url . '/' . variable_get('splash_screen_home_page', '') . "_" . $lang->prefix . '"">' . $lang->native . '</a>';
      $languages_list .= '</li>';
    }
  }

  $languages_list .= '</ol>';

  // Export variables to template.
  $variables['languages_list'] = $languages_list;
  $variables['languages_list_array'] = $languages[1];
  $variables['languages_blacklist'] = $languages_blacklist;

  $variables['base_url'] = $base_url;
  $variables['site_name'] = variable_get('site_name');
}

/**
 * Implements hook_permission().
 */
function splash_screen_permission() {
  return array(
    'administer splash screen' => array(
      'title' => t('Administer splash screen'),
      'description' => t('Administrer full settings of the splash screen module.'),
    ),
  );
}
